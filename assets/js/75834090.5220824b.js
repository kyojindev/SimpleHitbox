"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[409],{89713:e=>{e.exports=JSON.parse('{"functions":[{"name":"HitStart","desc":"Start listening for hits.\\n\\n\\n:::caution WARNING\\nThe position, radius and overlap parameters must be specified before calling this function!\\n:::","params":[{"name":"maxTime","desc":"Maximum time the hitbox can stay on for. Once this runs out, the hitbox will automatically stop listening for hits.","lua_type":"number?"}],"returns":[],"function_type":"method","source":{"line":109,"path":"src/SphereHitbox.lua"}},{"name":"HitStop","desc":"Stop listening for hits.","params":[],"returns":[],"function_type":"method","source":{"line":162,"path":"src/SphereHitbox.lua"}},{"name":"Destroy","desc":"Destroy the hitbox. This automatically calls HitStop and destroys the signal.\\n\\n:::caution WARNING\\nThe hitbox will be unusable once this is called!\\n:::","params":[],"returns":[],"function_type":"method","source":{"line":179,"path":"src/SphereHitbox.lua"}}],"properties":[{"name":"OverlapParams","desc":"The overlap parameters for the hitbox.","lua_type":"OverlapParams","source":{"line":22,"path":"src/SphereHitbox.lua"}},{"name":"Position","desc":"The position of the hitbox.\\n\\n:::caution WARNING\\nSetting this position won\'t update the hitbox if you have provided an instance for it to follow!\\n:::\\n\\n```lua\\nlocal sphereHitbox = SimpleHitbox.NewSphereHitbox()\\n\\nsphereHitbox.Position = Vector3.new(0, 5, 0)\\n```","lua_type":"Vector3","source":{"line":39,"path":"src/SphereHitbox.lua"}},{"name":"Radius","desc":"The radius of the hitbox.\\n\\n```lua\\nlocal sphereHitbox = SimpleHitbox.NewSphereHitbox()\\n\\nsphereHitbox.Radius = 5\\n```","lua_type":"number","source":{"line":52,"path":"src/SphereHitbox.lua"}},{"name":"OnHit","desc":"Fired when the hitbox gets a hit on a player.\\n\\n```lua\\nlocal sphereHitbox = SimpleHitbox.NewSphereHitbox()\\nsphereHitbox.OverlapParams = OverlapParams.new()\\nsphereHitbox:HitStart()\\n\\nsphereHitbox.OnHit:Connect(function(hit, humanoid)\\n\\tprint(\\"Hit!\\")\\nend)\\n```","lua_type":"Signal","source":{"line":69,"path":"src/SphereHitbox.lua"}}],"types":[],"name":"SphereHitbox","desc":"A hitbox that uses Roblox\'s :GetPartBoundsInRadius()","source":{"line":11,"path":"src/SphereHitbox.lua"}}')}}]);